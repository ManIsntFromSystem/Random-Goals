apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'

android {
    compileSdkVersion 30
    buildToolsVersion "30.0.0"

    defaultConfig {
        applicationId "com.quantumman.randomgoals"
        minSdkVersion 21
        targetSdkVersion 30
        versionCode 2
        versionName "1.0"

        //to hide the api-key at the GitHub -> we use resource and <meta-data />
        manifestPlaceholders = [fabric_io_id: "1234567890qwertyuiop1234567890"]

        project.ext.set("archivesBaseName", "RandomGoals-" + defaultConfig.versionName) //set Apk name for compilation
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
//
//        kapt {
//            arguments {
////                arg("room.schemaLocation", "$projectDir/schemas".toString())
//                arg("room.incremental", "true")
//                arg("room.expandProjection", "true")
//            }
//        }
    }

    buildFeatures {
        buildConfig = true // Determines whether to generate a BuildConfig class.
//        viewBinding = false
//        dataBinding = false
//        aidl = true // Determines whether to generate binder classes for your AIDL files.
//        renderScript = true // Determines whether to support RenderScript.
//        resValues = true  // Determines whether to support injecting custom variables into the moduleâ€™s R class.
//        shaders = true   // Determines whether to support shader AOT compilation.
    }

    splits {
        density {
            enable true
            exclude "ldpi", "xxhdpi", "xxxhdpi"
            compatibleScreens 'small', 'normal', 'large', 'xlarge'
        }
    }

    packagingOptions {
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE.txt'
    }

    compileOptions {
        sourceCompatibility = JavaVersion.VERSION_1_8
        targetCompatibility = JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_1_8.toString()
    }

    buildTypes {
        release {
            minifyEnabled true//get rid of not unused resources and libs(include Google Play Services)
            shrinkResources true//compress final size of apk
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'//base ProGuard rules(R8 Optimizer)
        }
    }

    //point Gradle which dirs it must use
    sourceSets {
        main.java.srcDirs += 'src/main/kotlin' //we can add our own dirs but we have to avoid name conflicts
    }

}

dependencies {
    //  Includes
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"

    // Test
    //these commands wont be at the release version
    testImplementation 'junit:junit:4.13'
    androidTestImplementation 'androidx.test.ext:junit:1.1.2'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'

    //  UI
    implementation 'androidx.core:core-ktx:1.3.1'
    implementation 'androidx.appcompat:appcompat:1.2.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.1'
    implementation 'com.google.android.material:material:1.2.1'
//    implementation 'com.google.android.material:material:1.3.0-alpha02'

    //  Room
    def roomVersion = "2.3.0-alpha02"
    implementation "androidx.room:room-runtime:$roomVersion"
    implementation "androidx.room:room-rxjava3:$roomVersion"
    implementation "androidx.room:room-ktx:$roomVersion"
    kapt "androidx.room:room-compiler:$roomVersion"

    //  RX
    def rxJavaVersion = '3.0.6'
    def rxAndroidVersion = '3.0.0'
    implementation "io.reactivex.rxjava3:rxjava:$rxJavaVersion"
    implementation "io.reactivex.rxjava3:rxandroid:$rxAndroidVersion"

    // LiveData
    def lifecycleVersion = '2.2.0'
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$lifecycleVersion"
    implementation "androidx.lifecycle:lifecycle-common-java8:$lifecycleVersion"

    //  Moxy
    def moxyVersion = '2.1.2'
    implementation "com.github.moxy-community:moxy:$moxyVersion"
    implementation "com.github.moxy-community:moxy-androidx:$moxyVersion"
    implementation "com.github.moxy-community:moxy-material:$moxyVersion"
    kapt "com.github.moxy-community:moxy-compiler:$moxyVersion"

    //  Cicerone
    implementation 'ru.terrakok.cicerone:cicerone:5.1.1'

    //  DI - Koin
    def koinVersion = '2.2.0-alpha-1'
    // Koin for Android
    implementation "org.koin:koin-android:$koinVersion"
    // Koin AndroidX Scope features
    implementation "org.koin:koin-androidx-scope:$koinVersion"
    // Koin AndroidX Fragment features
    implementation "org.koin:koin-androidx-fragment:$koinVersion"
    // Koin AndroidX Experimental features
    implementation "org.koin:koin-androidx-ext:$koinVersion"

    //  JodaTime for DateTime
    implementation 'net.danlew:android.joda:2.10.6.1'
    // Timber
    implementation 'com.jakewharton.timber:timber:4.7.1'
}
